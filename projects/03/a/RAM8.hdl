// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=a0, b=b0, c=c0, d=d0, e=e0, f=f0, g=g0, h=h0); //3-8 translator

    Register(in=in, load=a0, out=o0);
    Register(in=in, load=b0, out=o1);
    Register(in=in, load=c0, out=o2);
    Register(in=in, load=d0, out=o3);
    Register(in=in, load=e0, out=o4);
    Register(in=in, load=f0, out=o5);
    Register(in=in, load=g0, out=o6);
    Register(in=in, load=h0, out=o7);

    Mux8Way16(a=o0, b=o1, c=o2, d=o3, e=o4, f=o5, g=o6, h=o7, sel=address, out=out); //3-8 selector
}