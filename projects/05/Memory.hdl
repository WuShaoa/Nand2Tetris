// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
/** 
* Address distribution
* 0(14,RAM)  X  X  X  X  X  X  X  X  X  X  X  X  X  X (0-13,RAM)
* 1(14,I/O)  0(13,SCREEN) X  X  X  X  X  X  X  X  X  X  X  X  X (0-12,SCREEN)
* 1(14,I/O)  1(13,KEYBOARD) 0  0  0  0  0  0  0  0  0  0  0  0  0 (0-12,NULL)
*/   
    DMux(in=load, sel=address[14], a=lr, b=lio); //translator

    RAM16K(in=in, load=lr, address=address[0..13], out=oram);

    DMux(in=lio, sel=address[13], a=ls, b=lk); //sub-translator
    //NOTICE
    //Without the DMux above I/O will have no load check, which means any address[14]=1 and load is 1 
    //then Screen is to be loaded without checking whether address[13] is 0. But by convention 
    //'Access to address>0x6000 is invalid. Access to any address in the range 0x4000-0x5FFF 
    //results in accessing the screen memory map. Access to address 0x6000 results in accessing the keyboard memory map.'
    //lk will never be used, and user should always check whether their address access is legal or not.
    Screen(in=in, load=ls, address=address[0..12], out=oscreen);
    Keyboard(out=okeyboard);
    Mux16(a=oscreen, b=okeyboard, sel=address[13], out=oio); //sub-selector

    Mux16(a=oram, b=oio, sel=address[14], out=out); //selector
}